import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { fetchNavigationItems } from "lib/kontentClient.js"; 

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});
const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

type LocalNavigationItem = {
  system: { id: string };
  elements: { url: { value: string }; title: { value: string } };
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  let navigationItems: LocalNavigationItem[] = [];
  let error: string | null = null;

  try {
    // Fetch navigation items
    const fetchedItems = await fetchNavigationItems(); 

    // Transform the fetched items into the NavigationItem type
    navigationItems = fetchedItems.map((item): LocalNavigationItem => ({
      system: { id: item.system.id },
      elements: {
        url: { value: item.elements.url.value },
        title: { value: item.elements.title.value },
      },
    }));
  } catch (err) {
    console.error("Error fetching navigation items:", err);
    error = "Failed to load navigation. Please try again later.";
  }

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <nav className="bg-gray-800 text-white p-4">
          <ul className="flex space-x-4">
            {error ? (
              <li className="text-red-500">{error}</li>
            ) : (
              <>
                {navigationItems.map((item) => (
                  <li key={item.system.id}>
                    <a
                      href={item.elements.url.value}
                      className="hover:text-gray-300 transition-colors"
                    >
                      {item.elements.title.value}
                    </a>
                  </li>
                ))}
                <li>
                  <a
                    href="/artist-search"
                    className="hover:text-gray-300 transition-colors"
                  >
                    Artist Search
                  </a>
                </li>
                <li>
                  <a
                    href="/venue-search"
                    className="hover:text-gray-300 transition-colors"
                  >
                    Venue Search
                  </a>
                </li>
              </>
            )}
          </ul>
        </nav>
        <main className="p-4">{children}</main>
      </body>
    </html>
  );
}
